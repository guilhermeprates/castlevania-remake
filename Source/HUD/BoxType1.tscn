[gd_scene load_steps=7 format=2]

[ext_resource path="res://Source/LevelObjects/Sprites/LargeCandle.png" type="Texture" id=1]

[sub_resource type="GDScript" id=5]
script/source = "class_name Interactable extends Area2D

const SLICE = preload (\"res://Source/HUD/Slice.tscn\")
const HEARTZINHO = preload (\"res://Source/HUD/Heartzinho.tscn\")

export (int) var health
export (Array, String) var texture_list
export (Vector2) var offset

var can_interact
var invulnerability
var invulnerability_time 

func _ready() -> void:
	timer.set_wait_time(invulnerability_time) #script var

func _on_BoxType1_body_entered(body: Node) -> void:
	if can_process():
		update_health(body.object_damage)
		timer.start()
		can_interact = false

func update_health(damage: int) -> void:
	health -= damage
	animation.queue(\"SLICE\")
	if health <= 0:
		spawn_heartzinho()
		spawn_slice()

func spawn_slice():
	for Texture in SLICE:
		var slice_to_spawn: Object = SLICE.instance()
		slice_to_spawn.global_position = global_position
	queue_free()

func _on_Timer_timeout() -> void:
	can_interact = true
"

[sub_resource type="AtlasTexture" id=1]
atlas = ExtResource( 1 )
region = Rect2( 0, 100, 200, 100 )

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 200, 100, 200, 100 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ SubResource( 1 ), SubResource( 2 ) ],
"loop": true,
"name": "map_obj01",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 19, 31 )

[node name="BoxType1" type="Area2D"]
script = SubResource( 5 )
health = 1

[node name="Texture" type="AnimatedSprite" parent="."]
frames = SubResource( 3 )
animation = "map_obj01"
playing = true

[node name="Collision" type="CollisionShape2D" parent="."]
position = Vector2( -3, 19 )
shape = SubResource( 4 )

[connection signal="area_entered" from="." to="." method="_on_BoxType1_area_entered"]
