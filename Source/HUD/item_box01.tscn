[gd_scene load_steps=10 format=2]

[ext_resource path="res://Source/LevelObjects/Sprites/LargeCandle.png" type="Texture" id=2]
[ext_resource path="res://Assets/Sprites/icons mov_32x32/fire.png" type="Texture" id=3]

[sub_resource type="GDScript" id=7]
script/source = "class_name ItemBox
extends Node2D

signal on_break_object

export(String, \"Heartzinho\") var item = \"Heartzinho\" # colocar nos () os itens possiveis; var item = o que vai aparecer em cada box/padrao

onready var sprite: AnimatedSprite = $Sprite

var open = false # se a box esta quebrada ou nao
var on_box = false # player na area2d

func _process(delta: float) -> void:
	pass

func _on_Area_area_entered(area: Area2D) -> void:
	if area.is_in_group(\"Whip\"):
		self.on_box = true
		$Sprite.play(\"off\")


func _on_Sprite_animation_finished() -> void:
	if $Sprite.animation == \"off\":
		emit_signal(\"on_break_object\", position)
"

[sub_resource type="AtlasTexture" id=1]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=2]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 2 )
region = Rect2( 0, 100, 200, 100 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 2 )
region = Rect2( 200, 100, 200, 100 )

[sub_resource type="SpriteFrames" id=5]
animations = [ {
"frames": [ SubResource( 1 ), SubResource( 2 ) ],
"loop": true,
"name": "off",
"speed": 5.0
}, {
"frames": [ SubResource( 3 ), SubResource( 4 ) ],
"loop": true,
"name": "on",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 28, 30 )

[node name="BoxType1" type="Node2D"]
script = SubResource( 7 )

[node name="Sprite" type="AnimatedSprite" parent="."]
frames = SubResource( 5 )
animation = "on"
frame = 1
playing = true

[node name="Area" type="Area2D" parent="."]
collision_layer = 4

[node name="Collider" type="CollisionShape2D" parent="Area"]
position = Vector2( -5, 20 )
shape = SubResource( 6 )

[connection signal="animation_finished" from="Sprite" to="." method="_on_Sprite_animation_finished"]
[connection signal="area_entered" from="Area" to="." method="_on_Area_area_entered"]
[connection signal="body_entered" from="Area" to="." method="_on_area_body_entered"]
[connection signal="body_exited" from="Area" to="." method="_on_area_body_exited"]
